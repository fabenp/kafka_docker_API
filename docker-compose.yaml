version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    volumes:
      - ./kafka/server.properties:/kafka/config/server.properties

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=kafkadb
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
    volumes:
      - influxdb-storage:/var/lib/influxdb

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - influxdb

  producer-app:
    build:
      context: ./producer-app 
      dockerfile: Dockerfile
    container_name: producer-app
    depends_on:
      - kafka
    volumes:
      - ./producer-app:/app
    working_dir: /app
    command: ["python", "producer.py"]

  consumer-app:
    build:
      context: ./consumer-app  
      dockerfile: Dockerfile
    container_name: consumer-app
    depends_on:
      - kafka
      - influxdb
    volumes:
      - ./consumer-app:/app
    working_dir: /app
    command: ["python", "consumer.py"]

volumes:
  influxdb-storage:
  grafana-storage:
